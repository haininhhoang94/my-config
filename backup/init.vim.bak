call plug#begin()
" Add plugin here

" Default setting
Plug 'tpope/vim-sensible'

" Git interface
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

" Combine with Tmux
Plug 'christoomey/vim-tmux-navigator'
Plug 'benmills/vimux'

" File Manager/System/SearchFile
Plug 'scrooloose/nerdtree'
Plug 'junegunn/fzf.vim'

" Skin and color scheme
Plug 'itchyny/lightline.vim'
Plug 'flazz/vim-colorschemes'
Plug 'phanviet/vim-monokai-pro'
Plug 'morhetz/gruvbox'
Plug 'luochen1990/rainbow'
"Plug 'patstockwell/vim-monokai-tasty'
"Plug 'NLKNguyen/papercolor-theme'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'ryanoasis/vim-devicons'

" For faster coding style
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-surround'
Plug 'mattn/emmet-vim'
Plug 'vim-scripts/indentpython.vim'
Plug '907th/vim-auto-save'
Plug 'jiangmiao/auto-pairs'
Plug 'scrooloose/nerdcommenter'

" Support for outside of vim
Plug 'tpope/vim-eunuch'

" Auto-completion/Suggestion
Plug 'Valloric/YouCompleteMe'
"Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'vim-syntastic/syntastic'

" Syntax Language Specific
" Python
Plug 'nvie/vim-flake8'
Plug 'sheerun/vim-polyglot'
"Plug 'numirias/semshi', { 'do': ':UpdateRemotePlugins'  }


"Add Plug end here

call plug#end()
filetype plugin indent on

" -------------------------------------------------------
"  Set Terminal Colors To 256-colors
set termguicolors
let &t_8f = "\[38;2;%lu;%lu;%lum"
let &t_8b = "\[48;2;%lu;%lu;%lum"

" Set Python Highlight, height of commandline, and shell location
let g:python_highlight_all = 1
set cmdheight=1
set shell=/bin/sh

"Some initial setting
syntax on			" Turn on syntax coloring
set number			" Line number
set cursorline			" Set a line on the cursors
set completeopt-=preview	" Turn off Preview/Scratch mode
" This part is for some ultilities stuff
"--------------------------------------------------------
" Python location
let g:python2_host_prog = '$HOME/anaconda3/envs/pyds/bin/python'
let g:python3_host_prog = '$HOME/anaconda3/envs/pyds/bin/python3.6'

"-------------------------------------------------------
" Coc settings
" if hidden is not set, TextEdit might fail.
set hidden

"" Some servers have issues with backup files, see #649
"set nobackup
"set nowritebackup

"" Better display for messages
"set cmdheight=2

"" You will have bad experience for diagnostic messages when it's default 4000.
"set updatetime=300

"" don't give |ins-completion-menu| messages.
"set shortmess+=c

"" always show signcolumns
"set signcolumn=yes

""" Use tab for trigger completion with characters ahead and navigate.
""" Use command ':verbose imap <tab>' to make sure tab is not mapped by other plugin.
"inoremap <silent><expr> <TAB>
      "\ pumvisible() ? "\<C-n>" :
      "\ <SID>check_back_space() ? "\<TAB>" :
      "\ coc#refresh()
"inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

"function! s:check_back_space() abort
  "let col = col('.') - 1
  "return !col || getline('.')[col - 1]  =~# '\s'
"endfunction

"some command
":PlugList
":PlugInstall
":PlugSearch foo
":PlugClean

"Mode Settings
"
let &t_SI.="\e[5 q" "SI = INSERT mode
let &t_SR.="\e[4 q" "SR = REPLACE mode
let &t_EI.="\e[1 q" "EI = NORMAL mode (ELSE)
"
""Cursor settings:

"  1 -> blinking block
"  "  2 -> solid block 
"  "  3 -> blinking underscore
"  "  4 -> solid underscore
"  "  5 -> blinking vertical bar
"  "  6 -> solid vertical bar
"
"
" this section is for python coding binding
nnoremap <F5> :!python3 %<CR>

" Prompt for a command to run
nnoremap <C-t> :VimuxPromptCommand<CR>

"let g:auto_save = 1 "enable AutoSave on Vim startup
let g:rainbow_active = 1
"--------------------------------------------------------
" this Session is for lightline
set laststatus=2

let g:lightline = {
	\ 'colorscheme':'wombat',
	\ }

"-----------------------------------------------"
"This session is for disable arrowkey in both normal and insert mode

noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

"inoremap <Up> <NOP>
"inoremap <Down> <NOP>
"inoremap <Left> <NOP>
"inoremap <Right> <NOP>

"--------------------------------------------------------
" This part is for NERDTREE
" Ctrl-O to open NERDTREE
map <C-o> :NERDTreeToggle<CR> 

"--------------------------------------------------------
" This part is for Split Navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

"--------------------------------------------------------
" This part is for setting Split Position
set splitbelow
set splitright

"--------------------------------------------------------
" This part is for SimplyFold
let g:SimplyFold_docstring_preview=1

"--------------------------------------------------------
" For enable vim-monokai-tasty theme
"colorscheme monokai_pro 
colorscheme gruvbox
let g:gruvbox_contrast_light='hard'
let g:gruvbox_contrast_dark='hard'
"Change theme depending on the time of day
"let hr = (strftime('%H'))
"if hr >= 19
"set background=dark
"elseif hr >= 8
"set background=light
"elseif hr >= 0
"set background=dark
"endif
" Refresh NerdTree with button r
nmap <Leader>r :NERDTreeFocus<cr>R<c-w><c-p>
