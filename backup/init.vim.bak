"
" " fixes glitch? in colors when using vim with tmux
set t_Co=256
if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif
set nocompatible
filetype off
syntax on
set number
set cursorline
set completeopt-=preview
" This part is for some ultilities stuff
"--------------------------------------------------------

call plug#begin()
" Add plugin here

" Git interface
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

" Combine with Tmux
Plug 'christoomey/vim-tmux-navigator'
Plug 'benmills/vimux'

" File Manager/System/SearchFile
Plug 'scrooloose/nerdtree'
Plug 'kien/ctrlp.vim'
Plug 'junegunn/fzf.vim'

" Skin and color scheme
Plug 'itchyny/lightline.vim'
Plug 'flazz/vim-colorschemes'
Plug 'phanviet/vim-monokai-pro'
Plug 'morhetz/gruvbox'
Plug 'luochen1990/rainbow'
Plug 'patstockwell/vim-monokai-tasty'
Plug 'NLKNguyen/papercolor-theme'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'ryanoasis/vim-devicons'

" For faster coding style
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-surround'
Plug 'mattn/emmet-vim'
Plug 'vim-scripts/indentpython.vim'
Plug '907th/vim-auto-save'
Plug 'jiangmiao/auto-pairs'

" Support for outside of vim
Plug 'tpope/vim-eunuch'

" Auto-completion/Suggestion
Plug 'Valloric/YouCompleteMe'
Plug 'vim-syntastic/syntastic'

" Syntax Language Specific
" Python
"Plug 'nvie/vim-flake8'
"Plug 'sheerun/vim-polyglot'
Plug 'numirias/semshi', { 'do': ':UpdateRemotePlugins'  }


"Add Plug end here

call plug#end()
filetype plugin indent on
"-------------------------------------------------------
"some command
":PlugList
":PlugInstall
":PlugSearch foo
":PlugClean

"let g:python_highlight_all = 1
"Mode Settings
"
let &t_SI.="\e[5 q" "SI = INSERT mode
let &t_SR.="\e[4 q" "SR = REPLACE mode
let &t_EI.="\e[1 q" "EI = NORMAL mode (ELSE)
"
""Cursor settings:

"  1 -> blinking block
"  "  2 -> solid block 
"  "  3 -> blinking underscore
"  "  4 -> solid underscore
"  "  5 -> blinking vertical bar
"  "  6 -> solid vertical bar
"
"
" this section is for python coding binding
nnoremap <F5> :!python %<CR>

" Prompt for a command to run
nnoremap <C-t> :VimuxPromptCommand<CR>

let g:auto_save = 1 "enable AutoSave on Vim startup
let g:rainbow_active = 1
"--------------------------------------------------------
" this Session is for lightline
set laststatus=2

"if !has('gui_running')
"	set t_Co=256
"endif

let g:lightline = {
	\ 'colorscheme':'gruvbox',
	\ }

"-----------------------------------------------"
"This session is for disable arrowkey in both normal and insert mode

noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

"inoremap <Up> <NOP>
"inoremap <Down> <NOP>
"inoremap <Left> <NOP>
"inoremap <Right> <NOP>

"--------------------------------------------------------
" This part is for NERDTREE
" Ctrl-O to open NERDTREE
map <C-o> :NERDTreeToggle<CR> 

"--------------------------------------------------------
" This part is for Split Navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

"--------------------------------------------------------
" This part is for setting Split Position
set splitbelow
set splitright

"--------------------------------------------------------
"This part is for folding code
set foldmethod=indent
set foldlevel=99
nnoremap <space> za

"--------------------------------------------------------
" This part is for SimplyFold
let g:SimplyFold_docstring_preview=1

"--------------------------------------------------------
" For enable vim-monokai-tasty theme
"colorscheme monokai_pro 
colorscheme gruvbox
let g:gruvbox_contrast_light='hard'
let g:gruvbox_contrast_dark='hard'
"Change theme depending on the time of day
"let hr = (strftime('%H'))
"if hr >= 19
"set background=dark
"elseif hr >= 8
"set background=light
"elseif hr >= 0
"set background=dark
"endif
