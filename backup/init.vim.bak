" The following neovim configuration work with Neovim only, having no current
" plan to make it work to vim yet, since the authors doesn't like vim much
" Structure will be similar to
" https://github.com/scrapbird/dotfiles/blob/master/config/nvim/init.vim

set nocompatible

source $HOME/.config/nvim/plugins.vim

" -------------------------------------------------------
"  Set Terminal Colors To 256-colors
set termguicolors
let &t_8f = "\[38;2;%lu;%lu;%lum"
let &t_8b = "\[48;2;%lu;%lu;%lum"

" Set Python Highlight, height of commandline, and shell location
let g:python_highlight_all = 1
set cmdheight=1
set shell=/bin/sh

" Set syntax highlighting
let g:ale_linters = {
	\ 'python': ['flake8', 'pylint'],
	\ 'javascript': [ 'eslint' ],
	\ }

" Folding

"au BufNewFile,BufRead .py \ 
	"set foldmethod=indent
	
nnoremap <space> za

" TagBar
nmap <F8> :TagbarToggle<CR>

" Refresh source init.vim
nmap ,rr :so ~/.config/nvim/init.vim<CR>

"
" "Some initial setting
syntax on			" Turn on syntax coloring
set number			" Line number
set cursorline			" Set a line on the cursors
set completeopt-=preview	" Turn off Preview/Scratch mode
" This part is for some ultilities stuff
"--------------------------------------------------------
" Python location
let g:python2_host_prog = '$HOME/anaconda3/envs/pyds/bin/python'
let g:python3_host_prog = expand('$HOME/anaconda3/envs/pyds/bin/python3.6')

"Mode Settings
"
let &t_SI.="\e[5 q" "SI = INSERT mode
let &t_SR.="\e[4 q" "SR = REPLACE mode
let &t_EI.="\e[1 q" "EI = NORMAL mode (ELSE)
"
""Cursor settings:

"  1 -> blinking block
"  "  2 -> solid block 
"  "  3 -> blinking underscore
"  "  4 -> solid underscore
"  "  5 -> blinking vertical bar
"  "  6 -> solid vertical bar
"
"
"
"
"------------------------------------------------------
" Deoplete
let g:deoplete#enable_at_startup = 1

" Jedi-vim
" disable autocompletion, cause we use deoplete for completion
let g:jedi#completions_enabled = 0

" open the go-to function in split, not another buffer
let g:jedi#use_splits_not_buffers = "right"

" QtConsole Connect/Python coding config
":set textwidth=80
set colorcolumn=80
let g:jupyter_mapkeys = 0
nnoremap ,ss :JupyterConnect<CR>

" code execution
nnoremap <leader><F5> :JupyterSendCell<CR>
"nnoremap ,l :call PyShellSendLine()<CR>
"noremap <C-a> :call RunTmuxPythonAllCellsAbove()<CR>

" Reset all default mapping
let g:cellmode_default_mappings='0'
"let g:cellmode_tmux_sessionname='0'
let g:cellmode_tmux_panenumber='1'

" Prompt for a command to run
let g:VimuxResetSequence = ""	" Avoid send q C-U
let g:VimuxUseNearest = 1
nnoremap <C-t> :VimuxPromptCommand<CR>

"let g:auto_save = 1 "enable AutoSave on Vim startup
let g:rainbow_active = 1
"--------------------------------------------------------
" this Session is for lightline
set laststatus=2

let g:lightline = {
	\ 'colorscheme':'wombat',
	\ }

"-----------------------------------------------"
"This session is for disable arrowkey in both normal and insert mode

noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

"inoremap <Up> <NOP>
"inoremap <Down> <NOP>
"inoremap <Left> <NOP>
"inoremap <Right> <NOP>

"--------------------------------------------------------
" This part is for NERDTREE
" Ctrl-O to open NERDTREE
map <C-o> :NERDTreeToggle<CR> 
" Open NerdTree by default
"augroup nerdtree_open
    "autocmd!
    "autocmd VimEnter * NERDTree | wincmd p
"augroup END

" Make NERDTree look beautiful
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let g:NERDTreeDirArrowExpandable = '↠'
let g:NERDTreeDirArrowCollapsible = '↡'
let g:tagbar_iconchars = ['↠', '↡']

" Close NERDTree when close file
"autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif<Paste>


"--------------------------------------------------------
" This part is for Split Navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

"--------------------------------------------------------
" This part is for setting Split Position
set splitbelow
set splitright

"--------------------------------------------------------
" Tab Navigation
"nnoremap <L> :tabn<CR>
"nnoremap <H> :tabp<CR>
"nnoremap <C-N> :tabnew<CR>

"--------------------------------------------------------
" This part is for SimplyFold
let g:SimplyFold_docstring_preview=1

"--------------------------------------------------------
" For enable vim-monokai-tasty theme
"colorscheme monokai_pro 
autocmd ColorScheme * highlight Normal ctermbg=NONE guibg=NONE
colorscheme onedark

" Refresh NerdTree with button r
nmap <Leader>r :NERDTreeFocus<cr>R<c-w><c-p>

" For save and quit
noremap <C-s> :w<CR>
noremap <C-w> :wq<CR>
noremap <Esc><C-q> :q!<CR>
